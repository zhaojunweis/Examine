<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.examine.dao.TeacherMapper">

    <resultMap id="teacherBaseMap" type="com.examine.domain.TTeacher">
        <id property="id" column="id"/>
        <result property="tName" column="t_name"/>
        <result property="tRealName" column="t_real_name"/>
        <result property="tPass" column="t_pass"/>
        <result property="tIsAdmin" column="t_is_admin"/>
        <result property="tIsDelete" column="t_is_delete"/>
    </resultMap>

    <select id="selectTeacherPasswordByUsername" parameterType="String" resultType="String">
        select t_pass from t_teacher where t_name=#{tName}
    </select>

    <select id="selectAdminByLoginMessage" parameterType="String" resultType="String">
        select t_pass from t_teacher where t_name=#{tName} and t_is_admin = 1
    </select>

    <update id="updateAccountByUsername" parameterType="Map">
        update
        t_teacher
        <set>
            <if test="tName != null">
                t_name = #{tName},
            </if>
            <if test="tPass != null">
                t_pass = #{tPass},
            </if>
            <if test="tIsAdmin != null">
                t_is_admin = #{tIsAdmin}
            </if>
        </set>
        where
        t_name = #{tName}
    </update>

    <insert id="saveTeacher" parameterType="com.examine.domain.TTeacher"
            useGeneratedKeys="true" keyProperty="id">
        insert
        into t_teacher(
           t_name,
           t_real_name,
           t_pass,
           t_is_admin
        ) values (
           #{tName},
           #{tRealName},
           #{tPass},
           #{tIsAdmin}
        )
    </insert>

    <delete id="removeTeacher" parameterType="String">
        delete from t_teacher where t_name = #{tName}
    </delete>

    <select id="selectAllTeacher" resultMap="teacherBaseMap">
        select * from t_teacher where t_is_delete = 0
    </select>

    <select id = "selectIsPigeonhole" parameterType="String" resultType="Integer">
        select is_pigeonhole from t_exam where exam_name = #{examName}
    </select>

    <select id = "selectCountOtherAdminExceptAdmin" resultType="Integer">
        select count(*) from t_teacher where t_is_delete = 0 and t_name != 'admin' and t_is_admin = 1
    </select>
</mapper>
