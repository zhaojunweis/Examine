<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.examine.dao.StudentMapper">

    <resultMap id="studentBaseMap" type="com.examine.domain.TSubmit">
        <id property="id" column="id"/>
        <result property="sSno" column="s_sno"/>
        <result property="sName" column="s_name"/>
        <result property="sClassId" column="s_class_id"/>
        <result property="sScoreId" column="s_score_Id"/>
        <result property="sIsDelete" column="s_is_delete"/>

    </resultMap>


    <resultMap id="studentBaseMapWithIp" type="com.examine.domain.TStudent">
        <id property="id" column="id"/>
        <result property="sSno" column="s_sno"/>
        <result property="sName" column="s_name"/>
        <result property="sClassId" column="s_class_id"/>
        <result property="sScoreId" column="s_score_Id"/>
        <result property="sIsDelete" column="s_is_delete"/>
        <association property="tSubmit" column="s_sno"
                     select="com.examine.dao.StudentMapper.selectIpByStudentId"
                     javaType="com.examine.domain.TSubmit"/>
    </resultMap>

    <resultMap id="submitBaseMap" type="com.examine.domain.TSubmit">
        <result property="sSno" column="s_sno"/>
        <result property="ipAddress" column="s_login_address"/>
    </resultMap>

    <resultMap id="studentBaseShiro" type="com.examine.domain.TStudent">
        <id property="id" column="id"/>
        <result property="sSno" column="s_sno"/>
        <result property="sName" column="s_name"/>
        <result property="sClassId" column="s_class_id"/>
        <result property="sScoreId" column="s_score_Id"/>
        <result property="sIsDelete" column="s_is_delete"/>

        <collection property="role" column="role_id" ofType="com.examine.domain.TRole">
            <id column="role_id" property="roleId"/>
            <result column="role" property="role"/>
            <result column="description" property="description"/>
            <collection property="permSet" ofType="com.examine.domain.TPerm">
                <id column="perm_id" property="permId"/>
                <result column="url" property="url"/>
                <result column="desc" property="desc"/>
            </collection>
        </collection>
    </resultMap>

    <sql id="shiro-select-base">
        select
          t_student.id,
          t_student.s_sno,
          t_student.s_name,
          t_role.role_id,
          t_role.role,
          t_role.description,
          t_perm.perm_id,
          t_perm.url,
          t_perm.desc
          from
            t_student,
            t_role,
            t_role_perm,
            t_perm
        where t_student.role_id = t_role.role_id
        and t_role.role_id = t_role_perm.role_id
        and t_role_perm.perm_id = t_perm.perm_id
    </sql>

    <select id="selectStudentRoleAndPerm" parameterType="String" resultMap="studentBaseShiro">
        <include refid="shiro-select-base"/>
        AND
        s_sno = #{sSno}
    </select>

    <select id="selectStudentPasswordByUsername" parameterType="String" resultType="String">
        select s_pass from t_student where s_sno=#{sSno}
    </select>

    <select id="selectIpAddressByUsername" parameterType="String" resultType="String">
        select s_login_address from t_submit where s_sno = #{sSno}
    </select>

    <!--修改，需要查出IP地址-->
    <select id="selectStudentEntityByUsername" parameterType="String" resultMap="studentBaseMapWithIp">
        select * from t_student where s_sno = #{sSno} and s_is_delete = 0
    </select>
    <!-- 级联t_submit表查出ip-->
    <select id="selectIpByStudentId" parameterType="String" resultMap="submitBaseMap">
      select * from t_submit where s_sno = #{sSno} and s_is_delete = 0
    </select>

    <!--通过IP查找学号姓名班级ip地址-->
    <select id = "selectStudentByIp" parameterType="String" resultMap="studentBaseMapWithIp">
        select
          t1.s_sno,
          t1.s_name,
          t1.s_class_id,
          t2.s_login_address
        from
          t_student as t1,
          t_submit as t2
        where
          t1.s_sno = t2.s_sno
        and
          t2.s_is_delete = 0
        and
          t2.s_login_address = #{ip}
    </select>

    <update id="nonphysicalDeleteStudents" parameterType="Integer">
        update t_student set s_is_delete = 1 where s_score_Id = #{Id}
    </update>

    <insert id="saveStudentOneByOne" parameterType="com.examine.domain.TStudent">
        insert
        into t_student(
           s_sno,
           s_name,
           s_class_id,
           s_score_Id
        )values (
           #{sSno},
           #{sName},
           #{sClassId},
           #{sScoreId}
        )
    </insert>

    <!--考试人数-->
    <select id="examineesCount" resultType="Integer" parameterType="String">
        select
          count(*)
        from
          t_student,
          t_exam
        where
          t_student.s_is_delete = 0
        and
           t_exam.id = t_student.s_score_Id
        and
          t_exam.exam_name = #{sScoreName}

    </select>

    <!--登陆人数-->
    <select id="examineesWhoHasLoginCount" resultType="Integer" parameterType="String">
        select
           count(*)
        from
          t_submit,
          t_exam
        where
          t_submit.s_is_delete = 0
        and
          t_submit.s_login_address IS NOT NULL
        and
          t_submit.exam_Id = t_exam.id
        and
          t_exam.exam_name = #{sScoreName}
    </select>

    <!--提交人数-->
    <select id="examineesWhoSubmitCount" resultType="Integer" parameterType="String">
        select
          count(*)
        from
          t_submit,
          t_exam
        where
          t_submit.s_is_submit = 1
        and
          t_submit.s_is_delete = 0
        and
          t_submit.exam_Id = t_exam.id
        and
          t_exam.exam_name = #{sScoreName}
    </select>

    <!--未登录人数-->
    <select id="examineesWhoNoLoginCount" resultType="Integer" parameterType="String">
    select
      (
        select
          count(*)
        from
          t_student,
          t_exam
        where
          t_student.s_is_delete = 0
        and
           t_exam.id = t_student.s_score_Id
        and
          t_exam.exam_name = #{sScoreName}
      )
      -
      (
        select
           count(*)
        from
          t_submit,
          t_exam
        where
          t_submit.s_is_delete = 0
        and
          t_submit.s_login_address IS NOT NULL
        and
          t_submit.exam_Id = t_exam.id
        and
          t_exam.exam_name = #{sScoreName}
      );
    </select>


    <insert id="insertStudent" parameterType="com.examine.domain.TStudent">
        insert
        into t_student(
           s_sno,
           s_name,
           s_class_id,
           s_score_Id
        )values (
           #{sSno},
           #{sName},
           #{sClassId},
           #{sScoreId}
        )
    </insert>

    <insert id="updateDirtyData" parameterType="com.examine.domain.TStudent">
        update t_student
        <set>
            <if test="sSno != null">
                s_sno = #{sSno},
            </if>
            <if test="sName != null">
                s_name = #{sName},
            </if>
            <if test="sClassId != null">
                s_class_id = #{sClassId}
            </if>
        </set>
        where
        t_student.s_sno = 1610120001
    </insert>

    <update id="submitAnswer" parameterType="Map">
       update t_submit set s_is_submit = 1,s_exam_paper=#{examPaperUrl}, s_file_size = #{filesize} ,g_gmt_create = now()  where s_sno=#{sSno}
    </update>

    <!--not use-->
    <sql id="query_student_where">
        <if test="sSno != null">
            s_sno = #{sSno}
        </if>
        <if test="sName != null">
            s_name = #{sName}
        </if>
        <if test="sName != null">
            s_name = #{sName}
        </if>
    </sql>
    <!--删除某次单个学生-->
    <update id="deleteOneStudent" parameterType="Integer">
        update t_student set s_is_delete = 1 where id = #{studentId}
    </update>



</mapper>
